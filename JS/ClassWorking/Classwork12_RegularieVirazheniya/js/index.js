'use strict';

// $literals
// // let reg = new RegExp();
// let pattern = /win/  // win - це те слово яке ми хочемо знайти // Регулярний вираз
// const string = 'text windows win';
// console.log(string.match(pattern)); // метод для пошуку , string - в якій строці шукати, pattern - що шукати...
// console.log(pattern.test(string)); // Метод для перевірки на true / false, якщо знайшло, буде true, якщо ні, буде false


//////////////////////////////////////////////////////////////////////////////////////////////


// // $ flags
// let string = 'Is that all there is?',
//   reg = /is/gi; // Шукай мені глобально по всій строці// g - флаг , i - Ігнорує верхній регістр, і шукає любі літери, даже великі
//   console.log(string.match(reg)); // (2) ["Is", "is"] 
//    // gi - ig - Ролі не грає

////////////////////////////////////  ////////////////////////////////////////////////////////////////////////

// $classes
// const string = '12345, q5 wq w. www h - whwhwh';
// const reg = /\W/gi;
// console.log(string.match(reg));

/////////////////////////
// W - Пошук всього що є в строці, крім букв, і цифр, буде шукати символи
// w - ПОшук всього що є в строці, тільки без пробелів, дефісі, комів і т.д
// g це щоб шукало всі символи, якщо заберем g, то знайде перще що дасть true і зупиниться
//  d маленьке шукало числа,
// D шукає все крім цифр
// \d - Цей клас він нам відповідає за пошук цифр в середині строки
// Всі класи в регулярних виразах пишуться через зворотній слеш /
////////////////////////


///////////////////////////////////////////////////
// $qubantity
// ............
// let string = '92345 123, 243 467 52 34 987 5',
// regV = /\d{3,}/g;
// console.log(string.match(regV));
// /d - вивести всі числа по одному в масіві '9', '2', '3'
// \d{3} - Вивести числа по 3 // (5) ["923", "123", "243", "467", "987"];
// \d{1} -- Перебрало масів, щоб всі цифри порозкидало в по одному масіву // '9', '2', '3', '4', '5'
// \d{3,} Всі числа з масіва, розібьє на масіви // (5) ["92345", "123", "243", "467", "987"]

//  ...............
// let string = '92345 123, 243 467 52 34 987 5',
//   regV = /\b\d{3}\b/g;
// console.log(string.match(regV));
// b - Показує в нас початок і кінець слова // виділяє слово
// \b\d{3}\b - Знайшло всі цифри які є 3 цифри; //  (4) ["123", "243", "467", "987"];


/////////////////////////////

// let string = 'random text with a number - 5',
//   regV = /[a-zA-Z0-9]/g;
//   // [] - Вказує що в нас набір символів,
//  console.log(string.match(regV));
  

// .....................


// const string = 'sdasd 1 random text 5',
//  regV = /5$/; // ["5", index: 20, input: "sdasd 1 random text 5", groups: undefined];
//  console.log(string.match(regV));
//  ......
// ^ - Щоб опрацювати початок строки
// $ - Щоб опрацювати кінець строки
// Все що напишем перед $ , то і буде в кінці строки // ;$
// Все що напишем після ^, то буде на початку строки // ^;

// $boundaries

// const string = '22 sdasd. 1 random text 5',
//  regV = /^\d{2}.{1,};$/; // ["5", index: 20, input: "sdasd 1 random text 5", groups: undefined];
//  console.log(string.match(regV)); // null
// . - виводе один будь який символ
///////////////////////////////.............................

// СЛовник

// Флаги
// i - ігнорує регістр*
// g - глобальний погук а не перший збіг*
// m - багатостроковий пошук*
// Класи
// \d - numbers 0-9*
// \D - not numbers*
// \w - word*
// \W - not word*
// \s - space*
// \S - not space*
// \b - word or symbol with spase around*
// \B - not word*
// [] - набір *
// - діапазон *
// ^ - в [] це виключення за межами набору це початок строки*
// {} - показник кількості*
// () - група символів*
//  + - один або більше
//  ? - нуль або один
//  * - нуль або більше
//  . - будь - який символ*
//  $ - кінець строки*

//////////////////////////////////////////

// // () |
// let str = 'The car is par ked in the gar age.';
// let regV = /\b(c|g|p)ar\b/g; // Знайде або перше слово що починається на букву
// console.log(str.match(regV)); // (3) ["car", "par", "gar"]


/////////////////////////////

// () |
let str = 'The car is parked in the garage.';
let regV = /\b(c|g|p)[a-z]{1,}\b/g; // Знайде або перше слово що починається на букву
console.log(str.match(regV)); // (3) ["car", "parked", "garage"]